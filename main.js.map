{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/scripts/api.js","webpack://mesto-project-ff/./src/scripts/card.js","webpack://mesto-project-ff/./src/scripts/modal.js","webpack://mesto-project-ff/./src/scripts/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["const apiConfig = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-38/\",\r\n  headers: {\r\n    authorization: \"876e3de4-4442-4286-83e5-5c1ffc2cb0cf\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nconst handleResponse = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};\r\n\r\nexport const profileData = () => {\r\n  return fetch(`${apiConfig.baseUrl}/users/me`, {\r\n    headers: {\r\n      authorization: `${apiConfig.headers.authorization}`,\r\n    },\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const initialCards = () => {\r\n  return fetch(`${apiConfig.baseUrl}/cards`, {\r\n    headers: {\r\n      authorization: `${apiConfig.headers.authorization}`,\r\n    },\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const editProfileApi = (userData) => {\r\n  return fetch(`${apiConfig.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: apiConfig.headers,\r\n    body: JSON.stringify(userData),\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const newCardApi = (dataCard) => {\r\n  console.log(\"request\", JSON.stringify(dataCard));\r\n  return fetch(`${apiConfig.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: apiConfig.headers,\r\n    body: JSON.stringify(dataCard),\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const deleteCardApi = (cardId) => {\r\n  return fetch(`${apiConfig.baseUrl}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      authorization: `${apiConfig.headers.authorization}`,\r\n    },\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const likeCardApi = (cardId) => {\r\n  return fetch(`${apiConfig.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"PUT\",\r\n    headers: apiConfig.headers,\r\n    body: JSON.stringify(),\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const dislikeCardApi = (cardId) => {\r\n  return fetch(`${apiConfig.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: {\r\n      authorization: `${apiConfig.headers.authorization}`,\r\n    },\r\n  }).then(handleResponse);\r\n};\r\n\r\nexport const editAvatarApi = (avatar) => {\r\n  return fetch(`${apiConfig.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: apiConfig.headers,\r\n    body: JSON.stringify(avatar),\r\n  }).then(handleResponse);\r\n};\r\n","import { likeCardApi, dislikeCardApi } from \"./api.js\";\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\nfunction createCard(cardData, clickDelete, clickImg, clickLike, userId) {\r\n  const placesItem = cardTemplate.querySelector(\".places__item\").cloneNode(true);\r\n  const deleteButton = placesItem.querySelector(\".card__delete-button\");\r\n  const cardLikeButton = placesItem.querySelector(\".card__like-button\");\r\n\r\n  const cardTitle = placesItem.querySelector(\".card__title\");\r\n  const cardImage = placesItem.querySelector(\".card__image\");\r\n  const cardLikeCount = placesItem.querySelector(\".card__like-counter\");\r\n  const cardId = cardData._id;\r\n\r\n  cardTitle.textContent = cardData.name;\r\n  cardImage.src = cardData.link;\r\n  cardImage.alt = cardData.name;\r\n  cardLikeCount.textContent = cardData.likes.length;\r\n\r\n  const handleLike = cardData.likes\r\n    .map(function (likeObj) {\r\n      return likeObj._id;\r\n    })\r\n    .includes(userId);\r\n  if (handleLike) {\r\n    cardLikeButton.classList.toggle(\"card__like-button_is-active\");\r\n  }\r\n\r\n  const allowDelete = userId == cardData.owner._id;\r\n  if (allowDelete) {\r\n    deleteButton.classList.add(\"card__delete-button-active\");\r\n  }\r\n\r\n  deleteButton.addEventListener(\"click\", () => clickDelete(placesItem, cardId));\r\n  cardImage.addEventListener(\"click\", () =>\r\n    clickImg({ name: cardData.name, link: cardData.link })\r\n  );\r\n  cardLikeButton.addEventListener(\"click\", () =>\r\n    clickLike(cardId, cardLikeButton, cardLikeCount)\r\n  );\r\n\r\n  return placesItem;\r\n}\r\n\r\n// меняет состояние кнопки лайка\r\nfunction downLike(cardLike) {\r\n  const targetClass = \"card__like-button_is-active\";\r\n  cardLike.classList.toggle(targetClass);\r\n  // Возвращает true если кнопка активна, иначе false\r\n  return cardLike.classList.contains(\"card__like-button_is-active\");\r\n}\r\n\r\n// меняет счетчик лайков\r\nfunction setLikeCounter(cardLikeCount, likesNum) {\r\n  cardLikeCount.textContent = likesNum;\r\n}\r\n\r\n//  удаление карточки с формы\r\nfunction deleteCardFunc(cardElement) {\r\n  cardElement.remove();\r\n}\r\n\r\nexport { createCard, deleteCardFunc, downLike, setLikeCounter };\r\n","function openModal(element) {\r\n  element.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", EscClose);\r\n}\r\n\r\nfunction EscClose(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const openedPopup = document.querySelector(\".popup_is-opened\");\r\n    closeModal(openedPopup);\r\n  }\r\n}\r\n\r\nfunction closeModal(element) {\r\n  element.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", EscClose);\r\n}\r\n\r\nexport { openModal, closeModal };\r\n","// элемент и текст ошибки вторым параметром\r\nconst showInputError = (\r\n  formElement,\r\n  inputElement,\r\n  errorMessage,\r\n  validationConfig\r\n) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n// Функция, которая удаляет класс с ошибкой\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\n// проверяет валидность полей, задаем элемент формы и инпута внутри\r\nconst checkInputValidity = (formElement, inputElement, validationConfig) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    // выводит кастомное сообщение\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    // Передает сообщение об ошибке вторым аргументом\r\n    showInputError(\r\n      formElement,\r\n      inputElement,\r\n      inputElement.validationMessage,\r\n      validationConfig\r\n    );\r\n  } else {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\n// принимает массив полей формы и возвращает true если в нём хотя бы одно не валидно, и false если все валидны\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    // Если поле не валидно, колбэк вернёт true. Обход массива прекратится и вся функция hasInvalidInput вернёт true\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// принимает массив полей и элемент кнопки\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  // если есть хоть один невалидный инпут\r\n  if (hasInvalidInput(inputList)) {\r\n    // сделай кнопку неактивной\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    buttonElement.setAttribute(\"disabled\", \"true\");\r\n  } else {\r\n    // иначе сделай активной\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    buttonElement.removeAttribute(\"disabled\");\r\n  }\r\n};\r\n\r\n// слушатель для ввсех инпутов\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  // находим все инпуты и кнопки\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  // меняет кнопку\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n  inputList.forEach((inputElement) => {\r\n    // добавляет слушателя для каждого\r\n    inputElement.addEventListener(\"input\", function () {\r\n      checkInputValidity(formElement, inputElement, validationConfig);\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\n// валидация всех форм\r\nconst enableValidation = (validationConfig) => {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(validationConfig.formSelector)\r\n  );\r\n  formList.forEach((formElement) => {\r\n    formElement.addEventListener(\"submit\", function (evt) {\r\n      evt.preventDefault();\r\n    });\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n// очищает ошибки форм\r\nconst clearValidation = (formElement, validationConfig) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  });\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n};\r\n\r\nexport { enableValidation, clearValidation };\r\n\r\nconst validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__input-error_active\",\r\n};\r\n\r\nexport { validationConfig };\r\n","import \"./pages/index.css\";\r\nimport {\r\n  createCard,\r\n  deleteCardFunc,\r\n  downLike,\r\n  setLikeCounter,\r\n} from \"./scripts/card.js\";\r\nimport { openModal, closeModal } from \"./scripts/modal.js\";\r\nimport {\r\n  enableValidation,\r\n  clearValidation,\r\n  validationConfig,\r\n} from \"./scripts/validation.js\";\r\nimport {\r\n  profileData,\r\n  initialCards,\r\n  editProfileApi,\r\n  newCardApi,\r\n  deleteCardApi,\r\n  editAvatarApi,\r\n  likeCardApi,\r\n  dislikeCardApi,\r\n} from \"./scripts/api.js\";\r\n\r\nconst placesList = document.querySelector(\".places__list\");\r\nconst popupList = document.querySelectorAll(\".popup\");\r\n\r\n// кнопки вызова попапов\r\nconst profileEditButton = document.querySelector(\".profile__edit-button\");\r\nconst profileAddButton = document.querySelector(\".profile__add-button\");\r\nconst profileImgEditButton = document.querySelector(\".profile__image\");\r\n\r\n// попапы редактирования, добавления и удаления карточки\r\nconst popupEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupDeleteCard = document.querySelector(\".popup_type_delete-card\");\r\nconst popupAvatarEdit = document.querySelector(\".popup_type_edit-img\");\r\n\r\nconst deleteCardButton = document.querySelector(\r\n  \".popup_type_delete-card__button\"\r\n);\r\n\r\n// попап с картинкой и элементы\r\nconst popupTypeImage = document.querySelector(\".popup_type_image\");\r\nconst popupImg = popupTypeImage.querySelector(\".popup__image\");\r\nconst popupCaption = popupTypeImage.querySelector(\".popup__caption\");\r\n\r\n// форма добавления карточки и элементы\r\nconst formAddCards = document.forms.newPlace;\r\nconst placeInput = formAddCards.elements.placeName;\r\nconst linkInput = formAddCards.elements.link;\r\n\r\n// форма редактирования и элементы\r\nconst formEditProfile = document.forms.editProfile;\r\nconst nameProfileInput = formEditProfile.elements.name;\r\nconst jobProfileInput = formEditProfile.elements.description;\r\n\r\n// форма обновления аватара\r\nconst formEditAvatar = document.forms.editProfileAvatar;\r\nconst avatarLinkInput = formEditAvatar.elements.avatar;\r\n\r\n// элементы профиля\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nconst profileImage = document.querySelector(\".profile__image\");\r\n\r\nlet userId = null;\r\nlet idCardForDelete = null;\r\nlet cardForDelete = null;\r\n\r\nenableValidation(validationConfig);\r\n\r\n// Создает карточки и загружаем UserInfo\r\nPromise.all([profileData(), initialCards()])\r\n  .then(([userData, cards]) => {\r\n    profileImage.style.backgroundImage = `url(${userData.avatar})`;\r\n    profileTitle.textContent = userData.name;\r\n    profileDescription.textContent = userData.about;\r\n    userId = userData._id;\r\n    cards.forEach(function (cardData) {\r\n      const currentCard = createCard(\r\n        cardData,\r\n        handleDeleteCard,\r\n        openCardFunc,\r\n        handleLikeCard,\r\n        userId\r\n      );\r\n      placesList.append(currentCard);\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.log(\"Ошибка. Запрос не выполнен\", err);\r\n  }); // если что-то не так\r\n\r\n// открывает попап с картинкой\r\nfunction openCardFunc({ name, link }) {\r\n  popupImg.src = link;\r\n  popupImg.alt = name;\r\n  popupCaption.textContent = name;\r\n  openModal(popupTypeImage);\r\n}\r\n\r\n// сохраняет новую карточку\r\nfunction handleImgSubmit(evt) {\r\n  evt.preventDefault();\r\n  savingButtonText(popupNewCard);\r\n  const newCardData = {\r\n    name: placeInput.value,\r\n    link: linkInput.value,\r\n  };\r\n\r\n  newCardApi(newCardData)\r\n    .then((res) => {\r\n      const newCard = createCard(\r\n        res,\r\n        handleDeleteCard,\r\n        openCardFunc,\r\n        handleLikeCard,\r\n        userId\r\n      );\r\n      placesList.prepend(newCard);\r\n      formAddCards.reset();\r\n      closeModal(popupNewCard);\r\n      saveButtonText(popupNewCard);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Запрос не выполнен\", err);\r\n    })\r\n    .finally(() => {\r\n      saveButtonText(popupNewCard);\r\n    });\r\n}\r\n\r\nformAddCards.addEventListener(\"submit\", handleImgSubmit);\r\n\r\n// слушатель на кнопке \"добавить картинку\"\r\nprofileAddButton.addEventListener(\"click\", () => {\r\n  openModal(popupNewCard);\r\n  clearValidation(formAddCards, validationConfig);\r\n});\r\n\r\n// открывает модалку редактирования аватара\r\nprofileImgEditButton.addEventListener(\"click\", () => {\r\n  openModal(popupAvatarEdit);\r\n  clearValidation(formEditAvatar, validationConfig);\r\n});\r\n\r\n// редактирование аватарки\r\nfunction handleAvatarSubmit(evt) {\r\n  evt.preventDefault();\r\n  savingButtonText(popupAvatarEdit);\r\n  const profileAvatarLink = { avatar: avatarLinkInput.value };\r\n  editAvatarApi(profileAvatarLink)\r\n    .then((res) => {\r\n      profileImage.style.backgroundImage = `url(${res.avatar})`;\r\n      closeModal(popupAvatarEdit);\r\n      saveButtonText(popupAvatarEdit);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Запрос не выполнен\", err);\r\n    })\r\n    .finally(() => {\r\n      saveButtonText(popupAvatarEdit);\r\n    });\r\n}\r\n\r\nformEditAvatar.addEventListener(\"submit\", handleAvatarSubmit);\r\n\r\n// сохраняет введенные данные\r\nfunction handleFormEditSubmit(evt) {\r\n  evt.preventDefault();\r\n  savingButtonText(popupEdit);\r\n\r\n  const dataEditForm = {\r\n    name: nameProfileInput.value,\r\n    about: jobProfileInput.value,\r\n  };\r\n  editProfileApi(dataEditForm)\r\n    .then((res) => {\r\n      profileTitle.textContent = res.name;\r\n      profileDescription.textContent = res.about;\r\n    })\r\n    .then(() => {\r\n      closeModal(popupEdit);\r\n      saveButtonText(popupEdit);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Запрос не выполнен\", err);\r\n    })\r\n    .finally(() => {\r\n      saveButtonText(popupEdit);\r\n    });\r\n}\r\n\r\nformEditProfile.addEventListener(\"submit\", handleFormEditSubmit);\r\n\r\n// вбивает данные со страницы в попап\r\nprofileEditButton.addEventListener(\"click\", () => {\r\n  openModal(popupEdit);\r\n  nameProfileInput.value = profileTitle.textContent;\r\n  jobProfileInput.value = profileDescription.textContent;\r\n  clearValidation(formEditProfile, validationConfig);\r\n});\r\n\r\n// закрывает попап кликом\r\npopupList.forEach((popup) => {\r\n  popup.addEventListener(\"click\", (evt) => {\r\n    if (\r\n      evt.target.classList.contains(\"popup__close\") ||\r\n      evt.target.classList.contains(\"popup\")\r\n    ) {\r\n      closeModal(popup);\r\n    }\r\n  });\r\n});\r\n\r\n// Слушатель на подтверждение удаления карточки\r\ndeleteCardButton.addEventListener(\"click\", () => {\r\n  deleteCardApi(idCardForDelete)\r\n    .then(() => {\r\n      deleteCardFunc(cardForDelete);\r\n      closeModal(popupDeleteCard);\r\n      idCardForDelete = null;\r\n      cardForDelete = null;\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Запрос не выполнен\", err);\r\n    });\r\n});\r\n\r\n// Инициализация удаления карточки\r\nfunction handleDeleteCard(cardElement, cardId) {\r\n  idCardForDelete = cardId;\r\n  cardForDelete = cardElement;\r\n  openModal(popupDeleteCard);\r\n}\r\n\r\n// Обработка нажатия кнопки Like\r\nfunction handleLikeCard(cardId, cardLikeButton, cardLikeCount) {\r\n  const handleLike = downLike(cardLikeButton);\r\n\r\n  const res_promise = handleLike ? likeCardApi(cardId) : dislikeCardApi(cardId);\r\n  res_promise\r\n    .then((res) => {\r\n      setLikeCounter(cardLikeCount, res.likes.length);\r\n    })\r\n    .catch((err) => {\r\n      console.log(\"Ошибка. Запрос не выполнен\", err);\r\n      downLike(cardLikeButton);\r\n    });\r\n}\r\n\r\n//меняем текст кнопки сохранения\r\nconst savingButtonText = (element) => {\r\n  element.querySelector(\".popup__button\").textContent = \"Сохранение...\";\r\n};\r\n\r\nconst saveButtonText = (element) => {\r\n  element.querySelector(\".popup__button\").textContent = \"Сохранить\";\r\n};\r\n"],"names":["apiConfig","baseUrl","headers","authorization","handleResponse","res","ok","json","Promise","reject","concat","status","cardTemplate","document","querySelector","content","createCard","cardData","clickDelete","clickImg","clickLike","userId","placesItem","cloneNode","deleteButton","cardLikeButton","cardTitle","cardImage","cardLikeCount","cardId","_id","textContent","name","src","link","alt","likes","length","map","likeObj","includes","classList","toggle","owner","add","addEventListener","downLike","cardLike","contains","openModal","element","EscClose","evt","key","closeModal","remove","removeEventListener","hideInputError","formElement","inputElement","validationConfig","errorElement","id","inputErrorClass","errorClass","toggleButtonState","inputList","buttonElement","some","validity","valid","hasInvalidInput","inactiveButtonClass","removeAttribute","setAttribute","clearValidation","Array","from","querySelectorAll","inputSelector","submitButtonSelector","forEach","formSelector","placesList","popupList","profileEditButton","profileAddButton","profileImgEditButton","popupEdit","popupNewCard","popupDeleteCard","popupAvatarEdit","deleteCardButton","popupTypeImage","popupImg","popupCaption","formAddCards","forms","newPlace","placeInput","elements","placeName","linkInput","formEditProfile","editProfile","nameProfileInput","jobProfileInput","description","formEditAvatar","editProfileAvatar","avatarLinkInput","avatar","profileTitle","profileDescription","profileImage","idCardForDelete","cardForDelete","openCardFunc","_ref3","handleDeleteCard","cardElement","handleLikeCard","res_promise","fetch","method","body","JSON","stringify","then","likeCardApi","dislikeCardApi","likesNum","setLikeCounter","catch","err","console","log","preventDefault","patternMismatch","setCustomValidity","dataset","errorMessage","showInputError","validationMessage","checkInputValidity","setEventListeners","enableValidation","all","_ref","_ref2","userData","cards","style","backgroundImage","about","currentCard","append","dataCard","savingButtonText","value","newCard","prepend","reset","saveButtonText","finally","popup","target"],"sourceRoot":""}